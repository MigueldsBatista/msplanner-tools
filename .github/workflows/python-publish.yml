name: Python Package Publish

on:
  push:
    branches:
      - prod  # Define que o workflow será acionado sempre que houver um push para a branch prod

jobs:
  build:
    runs-on: ubuntu-latest  # Executa no Ubuntu mais recente
    
    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuração do Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Defina a versão que você deseja usar

      # Instalar dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine  # Ferramentas para empacotar e publicar

      # Instalar o seu pacote localmente para verificar se tudo está funcionando
      - name: Install msplanner-tools locally
        run: |
          pip install .

      # Gerar o pacote (distribuição)
      - name: Build the package
        run: |
          ls  # Verificar os arquivos do diretório
          python setup.py sdist bdist_wheel  # Gerar distribuição source e wheel

      # Verificar o conteúdo do diretório "dist"
      - name: List files in dist directory
        run: |
          ls dist  # Verifica se os arquivos .tar.gz e .whl foram gerados

      # Publicar no PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: "__token__"  # Utiliza __token__ como nome de usuário
          password: ${{ secrets.PYPI_PASSWORD }}  # O token de API será usado como senha
